name: Auto Release

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "lib/**"
      - "package.json"
      - "tsconfig.json"

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this version is already published
          if npm view r3call@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already published"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "New version $CURRENT_VERSION detected"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm ci

      - name: Build package
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm run build

      - name: Run tests
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm test --ignore-scripts || true
        continue-on-error: true

      - name: Publish to npm
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm publish --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.should_publish == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version-check.outputs.current_version }}
          name: v${{ steps.version-check.outputs.current_version }}
          generate_release_notes: true
          body: |
            ## R3call v${{ steps.version-check.outputs.current_version }}

            Intelligent memory layer for AI applications with sub-5ms response times.

            ### Installation
            ```bash
            npm install r3call@${{ steps.version-check.outputs.current_version }}
            ```

            ### Claude Desktop Setup
            ```bash
            npx r3call
            ```

            ### Documentation
            - [Getting Started](https://r3call.newth.ai/docs/quickstart)
            - [API Reference](https://r3call.newth.ai/docs/api-reference)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
