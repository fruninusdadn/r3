version: '3.8'

services:
  # Vector Embedding Service
  vector-embedding:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=text-embedding-3-small
      - OPENAI_DIMENSIONS=1536
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - PORT=3001
    depends_on:
      - redis
    volumes:
      - ./src:/app/src
      - ./server.js:/app/server.js
    networks:
      - recall-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - recall-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - recall-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  recall-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16